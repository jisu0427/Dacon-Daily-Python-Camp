{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1GUZKe7sNAbGBx7xT1_kNIlhOyYH6M-8r","timestamp":1664870012495}],"collapsed_sections":["AUk_fCmVhtIc"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"vIpjpOEXsoW0"},"source":["# [↩️ 리스트로 돌아가기](https://dacon.io/competitions/open/235698/overview/description)"]},{"cell_type":"markdown","metadata":{"id":"-Xk4YBNFhkPe"},"source":["# 셀을 실행할 때 팝업이 뜨면 `무시하고 계속하기` 를 눌러주세요\n"]},{"cell_type":"markdown","metadata":{"id":"7A1_NrpnNgI0"},"source":["## 데이터 다운로드\n","--- \n","아래 셀을 실행시켜 데이터를 colab에 불러옵니다.  \n","셀 실행은 Ctrl + Enter 를 이용해 실행 시킬 수 있습니다. "]},{"cell_type":"code","metadata":{"id":"a3VxvpLvhnap","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664870041918,"user_tz":-540,"elapsed":1563,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"0adce813-b5bf-4c52-c860-e418972be5d6"},"source":[")# 데이터 다운로드 링크로 데이터를 코랩에 불러옵니다.\n","\n","!wget 'https://bit.ly/3gLj0Q6'\n","\n","import zipfile\n","with zipfile.ZipFile('3gLj0Q6', 'r') as existing_zip:\n","    existing_zip.extractall('data')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-10-04 07:54:47--  https://bit.ly/3gLj0Q6\n","Resolving bit.ly (bit.ly)... 67.199.248.11, 67.199.248.10\n","Connecting to bit.ly (bit.ly)|67.199.248.11|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://drive.google.com/uc?export=download&id=1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E [following]\n","--2022-10-04 07:54:48--  https://drive.google.com/uc?export=download&id=1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E\n","Resolving drive.google.com (drive.google.com)... 74.125.20.100, 74.125.20.101, 74.125.20.102, ...\n","Connecting to drive.google.com (drive.google.com)|74.125.20.100|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0c-10-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/64qf72eopautslo2cirll7nusgqk87rl/1664870025000/17946651057176172524/*/1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E?e=download&uuid=cf65d788-61bb-48e1-90bd-e0c4c3836c6e [following]\n","Warning: wildcards not supported in HTTP.\n","--2022-10-04 07:54:48--  https://doc-0c-10-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/64qf72eopautslo2cirll7nusgqk87rl/1664870025000/17946651057176172524/*/1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E?e=download&uuid=cf65d788-61bb-48e1-90bd-e0c4c3836c6e\n","Resolving doc-0c-10-docs.googleusercontent.com (doc-0c-10-docs.googleusercontent.com)... 74.125.20.132, 2607:f8b0:400e:c07::84\n","Connecting to doc-0c-10-docs.googleusercontent.com (doc-0c-10-docs.googleusercontent.com)|74.125.20.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 39208 (38K) [application/zip]\n","Saving to: ‘3gLj0Q6’\n","\n","3gLj0Q6             100%[===================>]  38.29K  --.-KB/s    in 0s      \n","\n","2022-10-04 07:54:48 (92.8 MB/s) - ‘3gLj0Q6’ saved [39208/39208]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"gx8XCXCxeQk8"},"source":["## 라이브러리 불러오기\n","---\n"]},{"cell_type":"code","metadata":{"id":"kt_IKrkPeNwQ","executionInfo":{"status":"ok","timestamp":1664870141731,"user_tz":-540,"elapsed":1566,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["# Pandas 와 Scikit-learn 라이브러리를 불러오세요\n","import pandas as pd\n","from sklearn.tree import DecisionTreeRegressor"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VxC2pa2-rgat"},"source":["## 데이터 불러오기\n","---"]},{"cell_type":"code","metadata":{"id":"V6wTaK4sfnms","executionInfo":{"status":"ok","timestamp":1664870180756,"user_tz":-540,"elapsed":3,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["# train.csv 와 test.csv 를 DataFrame 클래스로 불러오세요\n","train = pd.read_csv('data/train.csv')\n","test = pd.read_csv('data/test.csv')"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rx1vTWZ6m275"},"source":["## 데이터 정보 관찰하기\n","---"]},{"cell_type":"code","metadata":{"id":"vsQQaG6AtlGM","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1664870190432,"user_tz":-540,"elapsed":516,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"bd72a217-14fc-4907-fee1-868a3b94ce6c"},"source":["# head() 를 사용해 데이터 정보를 관찰하세요\n","train.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id  hour  hour_bef_temperature  hour_bef_precipitation  hour_bef_windspeed  \\\n","0   3    20                  16.3                     1.0                 1.5   \n","1   6    13                  20.1                     0.0                 1.4   \n","2   7     6                  13.9                     0.0                 0.7   \n","3   8    23                   8.1                     0.0                 2.7   \n","4   9    18                  29.5                     0.0                 4.8   \n","\n","   hour_bef_humidity  hour_bef_visibility  hour_bef_ozone  hour_bef_pm10  \\\n","0               89.0                576.0           0.027           76.0   \n","1               48.0                916.0           0.042           73.0   \n","2               79.0               1382.0           0.033           32.0   \n","3               54.0                946.0           0.040           75.0   \n","4                7.0               2000.0           0.057           27.0   \n","\n","   hour_bef_pm2.5  count  \n","0            33.0   49.0  \n","1            40.0  159.0  \n","2            19.0   26.0  \n","3            64.0   57.0  \n","4            11.0  431.0  "],"text/html":["\n","  <div id=\"df-0caa9af3-a09e-4c8f-ae1e-d3a5e769711e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>hour</th>\n","      <th>hour_bef_temperature</th>\n","      <th>hour_bef_precipitation</th>\n","      <th>hour_bef_windspeed</th>\n","      <th>hour_bef_humidity</th>\n","      <th>hour_bef_visibility</th>\n","      <th>hour_bef_ozone</th>\n","      <th>hour_bef_pm10</th>\n","      <th>hour_bef_pm2.5</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>20</td>\n","      <td>16.3</td>\n","      <td>1.0</td>\n","      <td>1.5</td>\n","      <td>89.0</td>\n","      <td>576.0</td>\n","      <td>0.027</td>\n","      <td>76.0</td>\n","      <td>33.0</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>20.1</td>\n","      <td>0.0</td>\n","      <td>1.4</td>\n","      <td>48.0</td>\n","      <td>916.0</td>\n","      <td>0.042</td>\n","      <td>73.0</td>\n","      <td>40.0</td>\n","      <td>159.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>13.9</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>79.0</td>\n","      <td>1382.0</td>\n","      <td>0.033</td>\n","      <td>32.0</td>\n","      <td>19.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>23</td>\n","      <td>8.1</td>\n","      <td>0.0</td>\n","      <td>2.7</td>\n","      <td>54.0</td>\n","      <td>946.0</td>\n","      <td>0.040</td>\n","      <td>75.0</td>\n","      <td>64.0</td>\n","      <td>57.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>18</td>\n","      <td>29.5</td>\n","      <td>0.0</td>\n","      <td>4.8</td>\n","      <td>7.0</td>\n","      <td>2000.0</td>\n","      <td>0.057</td>\n","      <td>27.0</td>\n","      <td>11.0</td>\n","      <td>431.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0caa9af3-a09e-4c8f-ae1e-d3a5e769711e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0caa9af3-a09e-4c8f-ae1e-d3a5e769711e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0caa9af3-a09e-4c8f-ae1e-d3a5e769711e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"uWLjI6Hh_vQw","executionInfo":{"status":"ok","timestamp":1664870193657,"user_tz":-540,"elapsed":4,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"5afc4edc-d924-49be-a61f-de30ab9132b5"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id  hour  hour_bef_temperature  hour_bef_precipitation  hour_bef_windspeed  \\\n","0   0     7                  20.7                     0.0                 1.3   \n","1   1    17                  30.0                     0.0                 5.4   \n","2   2    13                  19.0                     1.0                 2.1   \n","3   4     6                  22.5                     0.0                 2.5   \n","4   5    22                  14.6                     1.0                 3.4   \n","\n","   hour_bef_humidity  hour_bef_visibility  hour_bef_ozone  hour_bef_pm10  \\\n","0               62.0                954.0           0.041           44.0   \n","1               33.0               1590.0           0.061           49.0   \n","2               95.0                193.0           0.020           36.0   \n","3               60.0               1185.0           0.027           52.0   \n","4               93.0                218.0           0.041           18.0   \n","\n","   hour_bef_pm2.5  \n","0            27.0  \n","1            36.0  \n","2            28.0  \n","3            38.0  \n","4            15.0  "],"text/html":["\n","  <div id=\"df-bf6bbe9f-2426-410f-a4e7-480f421a4328\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>hour</th>\n","      <th>hour_bef_temperature</th>\n","      <th>hour_bef_precipitation</th>\n","      <th>hour_bef_windspeed</th>\n","      <th>hour_bef_humidity</th>\n","      <th>hour_bef_visibility</th>\n","      <th>hour_bef_ozone</th>\n","      <th>hour_bef_pm10</th>\n","      <th>hour_bef_pm2.5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>20.7</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>62.0</td>\n","      <td>954.0</td>\n","      <td>0.041</td>\n","      <td>44.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>5.4</td>\n","      <td>33.0</td>\n","      <td>1590.0</td>\n","      <td>0.061</td>\n","      <td>49.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>13</td>\n","      <td>19.0</td>\n","      <td>1.0</td>\n","      <td>2.1</td>\n","      <td>95.0</td>\n","      <td>193.0</td>\n","      <td>0.020</td>\n","      <td>36.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>22.5</td>\n","      <td>0.0</td>\n","      <td>2.5</td>\n","      <td>60.0</td>\n","      <td>1185.0</td>\n","      <td>0.027</td>\n","      <td>52.0</td>\n","      <td>38.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>22</td>\n","      <td>14.6</td>\n","      <td>1.0</td>\n","      <td>3.4</td>\n","      <td>93.0</td>\n","      <td>218.0</td>\n","      <td>0.041</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf6bbe9f-2426-410f-a4e7-480f421a4328')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bf6bbe9f-2426-410f-a4e7-480f421a4328 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bf6bbe9f-2426-410f-a4e7-480f421a4328');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"5_bpcPVkt_FF"},"source":["## 데이터 행열 갯수 관찰\n","---"]},{"cell_type":"code","metadata":{"id":"UBg2PGcGt-Dz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664870203583,"user_tz":-540,"elapsed":3,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"b84c71ee-f7e4-4174-8388-1c915210be34"},"source":["# shape 를 사용해 데이터 크기를 관찰하세요\n","train.shape"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1459, 11)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6TecKJlt_x17","executionInfo":{"status":"ok","timestamp":1664870207691,"user_tz":-540,"elapsed":3,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"c81dbf7b-af6a-47f6-a93f-a305f7cf3e84"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(715, 10)"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"MbCKf_ZUu761"},"source":["## 결측치 확인\n","---"]},{"cell_type":"code","metadata":{"id":"9WoxzXdJu6ft","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664870217484,"user_tz":-540,"elapsed":1025,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"5fc9606f-8dbf-4b9f-e778-0a6c01ad2a03"},"source":["# info() 를 사용해 결측치가 있는지 확인하세요.\n","train.info()"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1459 entries, 0 to 1458\n","Data columns (total 11 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   id                      1459 non-null   int64  \n"," 1   hour                    1459 non-null   int64  \n"," 2   hour_bef_temperature    1457 non-null   float64\n"," 3   hour_bef_precipitation  1457 non-null   float64\n"," 4   hour_bef_windspeed      1450 non-null   float64\n"," 5   hour_bef_humidity       1457 non-null   float64\n"," 6   hour_bef_visibility     1457 non-null   float64\n"," 7   hour_bef_ozone          1383 non-null   float64\n"," 8   hour_bef_pm10           1369 non-null   float64\n"," 9   hour_bef_pm2.5          1342 non-null   float64\n"," 10  count                   1459 non-null   float64\n","dtypes: float64(9), int64(2)\n","memory usage: 125.5 KB\n"]}]},{"cell_type":"code","source":["test.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAqnGy_R_1Y3","executionInfo":{"status":"ok","timestamp":1664870220692,"user_tz":-540,"elapsed":2,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"6fe89d4d-365c-474e-e3f7-7c036202c88d"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 715 entries, 0 to 714\n","Data columns (total 10 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   id                      715 non-null    int64  \n"," 1   hour                    715 non-null    int64  \n"," 2   hour_bef_temperature    714 non-null    float64\n"," 3   hour_bef_precipitation  714 non-null    float64\n"," 4   hour_bef_windspeed      714 non-null    float64\n"," 5   hour_bef_humidity       714 non-null    float64\n"," 6   hour_bef_visibility     714 non-null    float64\n"," 7   hour_bef_ozone          680 non-null    float64\n"," 8   hour_bef_pm10           678 non-null    float64\n"," 9   hour_bef_pm2.5          679 non-null    float64\n","dtypes: float64(8), int64(2)\n","memory usage: 56.0 KB\n"]}]},{"cell_type":"markdown","metadata":{"id":"w_PwM9kF7Pbi"},"source":["## 결측치 전처리\n","---"]},{"cell_type":"code","metadata":{"id":"ryKlHfLWqgjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664870260871,"user_tz":-540,"elapsed":5,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"d5309896-231c-447f-a5eb-f8d989b1ba5d"},"source":["# dropna() 를 사용해 train 데이터는 결측치를 제거하고\n","# fillna() 를 사용해 test 데이터 결측치는 0 으로 대체하세요.\n","# 그리고 결측치의 갯수를 출력하여 확안하세요.\n","train = train.dropna()\n","print(train.isnull().sum())"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["id                        0\n","hour                      0\n","hour_bef_temperature      0\n","hour_bef_precipitation    0\n","hour_bef_windspeed        0\n","hour_bef_humidity         0\n","hour_bef_visibility       0\n","hour_bef_ozone            0\n","hour_bef_pm10             0\n","hour_bef_pm2.5            0\n","count                     0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["test = test.fillna(0)\n","print(test.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oSXhOw0B_5SP","executionInfo":{"status":"ok","timestamp":1664870285693,"user_tz":-540,"elapsed":288,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"36c293f5-74c0-44ea-9212-e26b003e638c"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["id                        0\n","hour                      0\n","hour_bef_temperature      0\n","hour_bef_precipitation    0\n","hour_bef_windspeed        0\n","hour_bef_humidity         0\n","hour_bef_visibility       0\n","hour_bef_ozone            0\n","hour_bef_pm10             0\n","hour_bef_pm2.5            0\n","dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"WGV3o2mFx8qG"},"source":["## 모델 훈련\n","---\n"]},{"cell_type":"code","metadata":{"id":"5jqXxcHHyX8g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664870443352,"user_tz":-540,"elapsed":312,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"a5be4848-deac-4297-8d5c-25dc77e15e3d"},"source":["# train 데이터의 count 피쳐를 뺀 것을 X_train 으로 할당하세요.\n","# train 데이터의 count 피쳐만을 가진 것을 Y_train 으로 할당하세요.\n","# 회귀의사결정나무를 선언하고 fit() 으로 훈련시키세요.\n","\n","X_train = train.drop(['count'], axis=1)\n","Y_train = train['count']\n","\n","model = DecisionTreeRegressor()\n","model.fit(X_train, Y_train)"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeRegressor()"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"Rb9n13smytBH"},"source":["## 테스트 파일 예측\n","---"]},{"cell_type":"code","metadata":{"id":"e6U9mwQByv8m","executionInfo":{"status":"ok","timestamp":1664870473089,"user_tz":-540,"elapsed":543,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["# predict() 을 이용해 test data 를 훈련한 모델로 예측한 data array 를 생성하세요.\n","pred = model.predict(test)"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"G7SqLw2iy2vR"},"source":["## submission 파일 생성\n","---"]},{"cell_type":"code","metadata":{"id":"EgGr3552y6B0","executionInfo":{"status":"ok","timestamp":1664870539936,"user_tz":-540,"elapsed":290,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["# submission.csv 를 불러오세요.\n","# submission df 의 count 피쳐에 예측한 결과를 덧입히세요.\n","# submission df 를 to_csv() 를 이용해 csv 을 생성하세요. *index=False) \n","submission_df = pd.read_csv('data/submission.csv')\n","submission_df['count'] = pred\n","submission_df.to_csv('submission_df.csv',index=False)"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AUk_fCmVhtIc"},"source":["## 정답 (`숨겨진 셀 n개` 를 누르세요.)\n","---\n","질문사항을 얼마든지 [게시글](https://dacon.io/competitions/open/235698/talkboard/403540?page=1&dtype=recent)에 남겨주세요 😉 <br>\n","궁금한 것, 이해가 안 되는 것, 원리, 확장개념, 참고 등등 모든 범위에서 얼마든지 질문을 달아주세요 🙋"]},{"cell_type":"code","metadata":{"id":"pbvpv6lsmSFj"},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Inyk90FOmUBq"},"source":["train = pd.read_csv('data/train.csv') \n","test = pd.read_csv('data/test.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kmMhAN1umdrc","colab":{"base_uri":"https://localhost:8080/","height":224},"executionInfo":{"status":"ok","timestamp":1626336171979,"user_tz":-540,"elapsed":892,"user":{"displayName":"캠프데이콘","photoUrl":"","userId":"17946651057176172524"}},"outputId":"11297ba0-0c58-4255-c098-2a21e9894d52"},"source":["train.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>hour</th>\n","      <th>hour_bef_temperature</th>\n","      <th>hour_bef_precipitation</th>\n","      <th>hour_bef_windspeed</th>\n","      <th>hour_bef_humidity</th>\n","      <th>hour_bef_visibility</th>\n","      <th>hour_bef_ozone</th>\n","      <th>hour_bef_pm10</th>\n","      <th>hour_bef_pm2.5</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>20</td>\n","      <td>16.3</td>\n","      <td>1.0</td>\n","      <td>1.5</td>\n","      <td>89.0</td>\n","      <td>576.0</td>\n","      <td>0.027</td>\n","      <td>76.0</td>\n","      <td>33.0</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>20.1</td>\n","      <td>0.0</td>\n","      <td>1.4</td>\n","      <td>48.0</td>\n","      <td>916.0</td>\n","      <td>0.042</td>\n","      <td>73.0</td>\n","      <td>40.0</td>\n","      <td>159.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>13.9</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>79.0</td>\n","      <td>1382.0</td>\n","      <td>0.033</td>\n","      <td>32.0</td>\n","      <td>19.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8</td>\n","      <td>23</td>\n","      <td>8.1</td>\n","      <td>0.0</td>\n","      <td>2.7</td>\n","      <td>54.0</td>\n","      <td>946.0</td>\n","      <td>0.040</td>\n","      <td>75.0</td>\n","      <td>64.0</td>\n","      <td>57.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>18</td>\n","      <td>29.5</td>\n","      <td>0.0</td>\n","      <td>4.8</td>\n","      <td>7.0</td>\n","      <td>2000.0</td>\n","      <td>0.057</td>\n","      <td>27.0</td>\n","      <td>11.0</td>\n","      <td>431.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  hour  hour_bef_temperature  ...  hour_bef_pm10  hour_bef_pm2.5  count\n","0   3    20                  16.3  ...           76.0            33.0   49.0\n","1   6    13                  20.1  ...           73.0            40.0  159.0\n","2   7     6                  13.9  ...           32.0            19.0   26.0\n","3   8    23                   8.1  ...           75.0            64.0   57.0\n","4   9    18                  29.5  ...           27.0            11.0  431.0\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"UglzLpT_mfkF","colab":{"base_uri":"https://localhost:8080/","height":224},"executionInfo":{"status":"ok","timestamp":1626336171981,"user_tz":-540,"elapsed":13,"user":{"displayName":"캠프데이콘","photoUrl":"","userId":"17946651057176172524"}},"outputId":"f04702f1-27ab-408b-cabf-803848e2a112"},"source":["test.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>hour</th>\n","      <th>hour_bef_temperature</th>\n","      <th>hour_bef_precipitation</th>\n","      <th>hour_bef_windspeed</th>\n","      <th>hour_bef_humidity</th>\n","      <th>hour_bef_visibility</th>\n","      <th>hour_bef_ozone</th>\n","      <th>hour_bef_pm10</th>\n","      <th>hour_bef_pm2.5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>20.7</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>62.0</td>\n","      <td>954.0</td>\n","      <td>0.041</td>\n","      <td>44.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>5.4</td>\n","      <td>33.0</td>\n","      <td>1590.0</td>\n","      <td>0.061</td>\n","      <td>49.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>13</td>\n","      <td>19.0</td>\n","      <td>1.0</td>\n","      <td>2.1</td>\n","      <td>95.0</td>\n","      <td>193.0</td>\n","      <td>0.020</td>\n","      <td>36.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>22.5</td>\n","      <td>0.0</td>\n","      <td>2.5</td>\n","      <td>60.0</td>\n","      <td>1185.0</td>\n","      <td>0.027</td>\n","      <td>52.0</td>\n","      <td>38.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>22</td>\n","      <td>14.6</td>\n","      <td>1.0</td>\n","      <td>3.4</td>\n","      <td>93.0</td>\n","      <td>218.0</td>\n","      <td>0.041</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  hour  ...  hour_bef_pm10  hour_bef_pm2.5\n","0   0     7  ...           44.0            27.0\n","1   1    17  ...           49.0            36.0\n","2   2    13  ...           36.0            28.0\n","3   4     6  ...           52.0            38.0\n","4   5    22  ...           18.0            15.0\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"n3fhEc9xmYAk"},"source":["train.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BrYzOqyimbpv"},"source":["test.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZAipsbqGmjuV"},"source":["train.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"w338i-nDmoUW"},"source":["test.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vPQrY6YCmq7z"},"source":["train = train.dropna()\n","test = test.fillna(0)\n","\n","print(train.isnull().sum())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Kt1xqtTXzMqz"},"source":["X_train = train.drop(['count'], axis=1)\n","Y_train = train['count']\n","model = DecisionTreeRegressor()\n","model.fit(X_train, Y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4uMd1yczzOnq"},"source":["pred = model.predict(test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vmd-oigEzQ-z"},"source":["submission = pd.read_csv('data/submission.csv')\n","submission['count'] = pred\n","submission.to_csv('sub.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1m-IW-T1tB3B"},"source":["# [↩️ 리스트로 돌아가기](https://dacon.io/competitions/open/235698/overview/description)"]}]}