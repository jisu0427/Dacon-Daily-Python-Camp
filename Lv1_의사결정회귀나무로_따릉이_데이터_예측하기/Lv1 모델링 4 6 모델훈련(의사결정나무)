{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wdmGQfq4eO07pA7Vlq-dgQmF5p8i3eYF","timestamp":1664866688345}],"collapsed_sections":["AUk_fCmVhtIc"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"-Xk4YBNFhkPe"},"source":["# 셀을 실행할 때 팝업이 뜨면 `무시하고 계속하기` 를 눌러주세요\n"]},{"cell_type":"markdown","metadata":{"id":"7A1_NrpnNgI0"},"source":["## 데이터 다운로드\n","--- \n","아래 셀을 실행시켜 데이터를 colab에 불러옵니다.  \n","셀 실행은 Ctrl + Enter 를 이용해 실행 시킬 수 있습니다. "]},{"cell_type":"code","metadata":{"id":"a3VxvpLvhnap","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664866731302,"user_tz":-540,"elapsed":1684,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"23ac5ba1-da90-471a-95a3-ba680212fcee"},"source":["# 데이터 다운로드 링크로 데이터를 코랩에 불러옵니다.\n","\n","!wget 'https://bit.ly/3gLj0Q6'\n","\n","import zipfile\n","with zipfile.ZipFile('3gLj0Q6', 'r') as existing_zip:\n","    existing_zip.extractall('data')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-10-04 06:59:37--  https://bit.ly/3gLj0Q6\n","Resolving bit.ly (bit.ly)... 67.199.248.10, 67.199.248.11\n","Connecting to bit.ly (bit.ly)|67.199.248.10|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://drive.google.com/uc?export=download&id=1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E [following]\n","--2022-10-04 06:59:37--  https://drive.google.com/uc?export=download&id=1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E\n","Resolving drive.google.com (drive.google.com)... 142.251.2.113, 142.251.2.138, 142.251.2.100, ...\n","Connecting to drive.google.com (drive.google.com)|142.251.2.113|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0c-10-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/n3ren58jh1f3c3bof72a9cu8bj6qsk6k/1664866725000/17946651057176172524/*/1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E?e=download&uuid=18d720e0-d871-4c63-92da-3ba93e2c4f84 [following]\n","Warning: wildcards not supported in HTTP.\n","--2022-10-04 06:59:38--  https://doc-0c-10-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/n3ren58jh1f3c3bof72a9cu8bj6qsk6k/1664866725000/17946651057176172524/*/1or_QN1ksv81DNog6Tu_kWcZ5jJWf5W9E?e=download&uuid=18d720e0-d871-4c63-92da-3ba93e2c4f84\n","Resolving doc-0c-10-docs.googleusercontent.com (doc-0c-10-docs.googleusercontent.com)... 142.251.2.132, 2607:f8b0:4023:c0d::84\n","Connecting to doc-0c-10-docs.googleusercontent.com (doc-0c-10-docs.googleusercontent.com)|142.251.2.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 39208 (38K) [application/zip]\n","Saving to: ‘3gLj0Q6’\n","\n","3gLj0Q6             100%[===================>]  38.29K  --.-KB/s    in 0s      \n","\n","2022-10-04 06:59:38 (81.2 MB/s) - ‘3gLj0Q6’ saved [39208/39208]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"gx8XCXCxeQk8"},"source":["## 라이브러리 불러오기\n","---\n","아래 셀을 실행시켜 pandas 와 DecisionTreeClassifier 를 불러옵니다."]},{"cell_type":"code","metadata":{"id":"kt_IKrkPeNwQ","executionInfo":{"status":"ok","timestamp":1664866736925,"user_tz":-540,"elapsed":1968,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["import pandas as pd\n","from sklearn.tree import DecisionTreeRegressor"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VxC2pa2-rgat"},"source":["## 데이터 불러오기\n","---\n","아래 셀을 실행시켜 csv 파일 데이터를 DataFrame 객체로 불러옵니다."]},{"cell_type":"code","metadata":{"id":"V6wTaK4sfnms","executionInfo":{"status":"ok","timestamp":1664866737989,"user_tz":-540,"elapsed":1,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["train = pd.read_csv('data/train.csv') \n","test = pd.read_csv('data/test.csv')"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w_PwM9kF7Pbi"},"source":["## 결측치 제거하기\n","---\n","결측치를 제거하고, 결측치가 모두 제거됐는지 확인합니다."]},{"cell_type":"code","metadata":{"id":"ryKlHfLWqgjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664866740953,"user_tz":-540,"elapsed":325,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"27aa355c-25ab-4b5f-e555-b1ceaed63f2b"},"source":["test = test.dropna()\n","train = train.dropna()\n","\n","print(train.isnull().sum())"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["id                        0\n","hour                      0\n","hour_bef_temperature      0\n","hour_bef_precipitation    0\n","hour_bef_windspeed        0\n","hour_bef_humidity         0\n","hour_bef_visibility       0\n","hour_bef_ozone            0\n","hour_bef_pm10             0\n","hour_bef_pm2.5            0\n","count                     0\n","dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"Q453R09NhqYM"},"source":["## 👋 실습(1/2)\n","---\n","train 데이터중 <br>\n","예측해야할 `count` 피쳐를 drop()함수를 사용하고, axis=1 옵션을 사용해 해당 열을 제외한 데이터들을 `X_train` 이라는 이름의 DataFrame 객체로 만들고 <br>\n","`count` 피쳐만을 데이터로 갖는 `Y_train` 이라는 이름의 DataFrame 객체로 만드는 코드를 아래에 작성하세요\n"]},{"cell_type":"code","metadata":{"id":"zAnhzBdphqBA","executionInfo":{"status":"ok","timestamp":1664866868848,"user_tz":-540,"elapsed":297,"user":{"displayName":"정지수","userId":"11788039510375475925"}}},"source":["X_train = train.drop(['count'], axis=1)\n","Y_train = train['count']"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Moz8EBWwE1wo"},"source":["## 👋 실습(2/2)\n","---\n","`model` 변수명으로 모델을 선언하고, fit() 함수를 사용해서, `X_train` 을 input 으로 삼고, `Y_train` 을 output 으로 삼아 모델을 훈련시키는 코드를 아래에 작성하세요"]},{"cell_type":"code","metadata":{"id":"N7IOh1cwFJSi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664866923510,"user_tz":-540,"elapsed":308,"user":{"displayName":"정지수","userId":"11788039510375475925"}},"outputId":"c18b5f6f-12cc-400b-80bb-fc03a0c0b91e"},"source":["model = DecisionTreeRegressor()\n","model.fit(X_train, Y_train)"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeRegressor()"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"AUk_fCmVhtIc"},"source":["## 정답 (`숨겨진 셀 n개` 를 누르세요.)\n","---\n","질문사항을 얼마든지 [게시글](https://dacon.io/competitions/open/235698/talkboard/403540?page=2&dtype=recent)에 남겨주세요 😉 <br>\n","궁금한 것, 이해가 안 되는 것, 원리, 확장개념, 참고 등등 모든 범위에서 얼마든지 질문을 달아주세요 🙋"]},{"cell_type":"code","metadata":{"id":"6EcxVzdNfwLR"},"source":["X_train = train.drop(['count'], axis=1)\n","Y_train = train['count']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CNOaDnbYfloy"},"source":["model = DecisionTreeRegressor()\n","model.fit(X_train, Y_train)"],"execution_count":null,"outputs":[]}]}